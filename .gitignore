# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/client/.pnp
/client/.pnp.js

# testing
/client/coverage


# production
/client/build

# misc
client/.DS_Store
client/.env.local
client/.env.development.local
client/.env.test.local
client/.env.production.local

client/npm-debug.log*
client/yarn-debug.log*
client/yarn-error.log*
env


### Django ###
server/*.log
server/*.pot
server/*.pyc
__pycache__
server/local_settings.py
db.sqlite3
server/db.sqlite3-journal
server/media

# If your build process includes running collectstatic, then you probably don't need or want to include staticfiles/
# in your Git repository. Update and uncomment the following line accordingly.
# <django-project-name>/staticfiles/

### Django.Python Stack ###
# Byte-compiled / optimized / DLL files
server/*.py[cod]
server/*$py.class

# C extensions
server/*.so

# Distribution / packaging
server/.Python
server/build/
server/develop-eggs/
server/dist/
server/downloads/
server/eggs/
server/.eggs/
server/parts/
server/sdist/
server/var/
server/wheels/
server/pip-wheel-metadata/
server/share/python-wheels/
server/*.egg-info/
server/.installed.cfg
server/*.egg
server/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
server/*.manifest
server/*.spec

# Installer logs
server/pip-log.txt
server/pip-delete-this-directory.txt

# Unit test / coverage reports
server/htmlcov/
server/.tox/
server/.nox/
server/.coverage
server/.coverage.*
server/.cache
server/nosetests.xml
server/coverage.xml
server/*.cover
server/*.py,cover
server/.hypothesis/
server/.pytest_cache/
server/pytestdebug.log

# Translations
server/*.mo

# Django stuff:

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
doc/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#poetry.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
# .env
server/.env/
server/.venv/
server/env/
venv/
ENV/
env.bak/
venv.bak/
server/pythonenv*

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# operating system-related files
*.DS_Store #file properties cache/storage on macOS
Thumbs.db #thumbnail cache on Windows

# profiling data
server/.prof


# End of https://www.toptal.com/developers/gitignore/api/django
